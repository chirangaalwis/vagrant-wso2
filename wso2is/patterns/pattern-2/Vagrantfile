# Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'
require 'fileutils'

# load server configurations from YAML file
CONFIGURATIONS = YAML.load_file('config.yaml')

Vagrant.configure(2) do |config|
  CONFIGURATIONS['servers'].each do |server|
    if defined?(server['enabled']) && server['enabled'] != false

      if !defined?(server['enabled'])
        puts "No deployment mode defined [The server deployment mode can only be either standalone or clustered]"
        break
      end

      if CONFIGURATIONS['mode'] == 'standalone'
        server['ports'].each do |port|
          config.vm.network "forwarded_port", guest: port, host: port, host_ip: "127.0.0.1"
        end
      elsif CONFIGURATIONS['mode'] == 'clustered'
        config.vm.define server['hostname'] do |server_config|
          server_config.vm.network :private_network, ip: server['ip']
        end
      else
        puts "Incorrect deployment mode ''" + CONFIGURATIONS['mode'] + "' [The server deployment mode can only be either standalone or clustered]"
        break
      end


      config.vm.define server['hostname'] do |server_config|
        server_config.vm.box = server['box']
        server_config.vm.host_name = server['hostname']
        # server_config.vm.network :private_network, ip: server['ip']
        memory = server['ram'] ? server['ram'] : 2048
        cpu = server['cpu'] ? server['cpu'] : 1

        server_config.vm.provider :virtualbox do |vb|
          vb.name = server['hostname']
          vb.check_guest_additions = false
          vb.functional_vboxsf = false
          vb.gui = false
          vb.customize ['modifyvm', :id, '--memory', memory]
          vb.customize ['modifyvm', :id, '--cpus', cpu]
        end

        if defined?(server['provisioner_script_args'])
          server_config.vm.provision "shell", path: server["provisioner_script"], args: server["provisioner_script_args"]
        else
          server_config.vm.provision "shell", path: server["provisioner_script"]
        end
      end
    end
  end
end
